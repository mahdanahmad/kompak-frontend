{"version":3,"sources":["../../../js/dialogs/user.js"],"names":["app","controller","$scope","fetcher","data","autoData","province","regency","district","village","autoSearch","autoModel","mapName","_","chain","map","o","pickBy","d","key","includes","startsWith","mapKeys","value","createFilterFor","query","angular","lowercase","name","querySearch","filter","isDisAuto","isEmpty","usr_province","usr_regency","usr_district","autoChanged","id","model","locationId","locationList","nextIndex","indexOf","drop","forEach","getLocation","response","status_code","result","init","async","parallel","instits","callback","getAllInstitution","message","educats","getAllEducation","err","results","console","log","inputs","label","tag","type","required"],"mappings":"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","file":"user.js","sourcesContent":["app.controller('ModalUserController', ['$scope', 'fetcher', function ($scope, fetcher) {\n    'use strict';\n\n\t$scope.data\t\t\t= {};\n\t$scope.autoData\t\t= { province: [], regency: [], district: [], village: [] };\n\t$scope.autoSearch\t= { province: '', regency: '', district: '', village: '' };\n\t$scope.autoModel\t= { province: null, regency: null, district: null, village: null };\n\n\tlet mapName\t= (data) => (\n\t\t_.chain(data).map((o) => (\n\t\t\t_.chain(o).pickBy((d, key) => ( _.includes(['id', 'education'], key) || _.startsWith(key, 'name') )).mapKeys((d, key) => (key == 'id' ? 'id' : 'name')).value()\n\t\t)).value()\n\t);\n\n\tlet createFilterFor\t= (query) => ((data) => (_.includes(angular.lowercase(data.name), angular.lowercase(query))))\n\n\t$scope.querySearch\t= (value) => ($scope.autoSearch[value] ? $scope.autoData[value].filter( createFilterFor($scope.autoSearch[value]) ) : $scope.autoData[value])\n\t$scope.isDisAuto\t= (value) => {\n\t\tswitch (value) {\n\t\t\tcase 'regency': return (_.isEmpty($scope.data.usr_province));\n\t\t\tcase 'district': return (_.isEmpty($scope.data.usr_province) || _.isEmpty($scope.data.usr_regency));\n\t\t\tcase 'village': return (_.isEmpty($scope.data.usr_province) || _.isEmpty($scope.data.usr_regency) || _.isEmpty($scope.data.usr_district));\n\t\t\tdefault: return false;\n\t\t}\n\t}\n\t$scope.autoChanged\t= (id, value, model) => {\n\t\tif (id) {\n\t\t\tlet locationId\t\t= '';\n\t\t\tlet locationList\t= ['province', 'regency', 'district', 'village'];\n\n\t\t\tlet nextIndex\t\t= _.indexOf(locationList, value) + 1;\n\t\t\t$scope.data[model]\t= id;\n\n\t\t\tswitch (value) {\n\t\t\t\tcase 'province':\n\t\t\t\tlocationId = id; break;\n\t\t\t\tcase 'regency':\n\t\t\t\tlocationId = $scope.data.usr_province + '/' + id; break;\n\t\t\t\tcase 'district':\n\t\t\t\tlocationId = $scope.data.usr_province + '/' + $scope.data.usr_regency + '/' + id; break;\n\t\t\t\tdefault: return;\n\t\t\t}\n\n\t\t\t_.chain(locationList).drop(nextIndex).forEach((o) => { $scope.autoModel[o] = null; delete $scope.data['usr_' + o]; }).value();\n\t\t\tfetcher.getLocation(locationId, {}, (response) => {\n\t\t\t\tif (response.response == 'OK' && response.status_code == 200) {\n\t\t\t\t\t$scope.autoData[locationList[nextIndex]] = mapName(response.result);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tlet init = () => {\n\t\tasync.parallel({\n\t\t\tinstits: (callback) => {\n\t\t\t\tfetcher.getAllInstitution({}, (response) => {\n\t\t\t\t\tif (response.response == 'OK' && response.status_code == 200) {\n\t\t\t\t\t\tcallback(null, mapName(response.result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(response.message);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\teducats: (callback) => {\n\t\t\t\tfetcher.getAllEducation({}, (response) => {\n\t\t\t\t\tif (response.response == 'OK' && response.status_code == 200) {\n\t\t\t\t\t\tcallback(null, mapName(response.result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(response.message);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tprovince: (callback) => {\n\t\t\t\tfetcher.getLocation('', {}, (response) => {\n\t\t\t\t\tif (response.response == 'OK' && response.status_code == 200) {\n\t\t\t\t\t\tcallback(null, mapName(response.result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(response.message);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t}, (err, results) => {\n\t\t\tif (err) { console.log(err); }\n\n\t\t\t$scope.autoData.province\t= results.province;\n\n\t\t\t$scope.inputs\t= [\n\t\t\t\t{ label: 'name', model: 'usr_display_name', tag: 'input', type: 'text', required: true },\n\t\t\t\t{ label: 'email', model: 'usr_email', tag: 'input', type: 'email', required: true },\n\t\t\t\t{ label: 'password', model: 'usr_password', tag: 'input', type: 'password', required: true },\n\t\t\t\t{ label: 'year of born', model: 'usr_year_born', tag: 'input', type: 'number' },\n\t\t\t\t{ label: 'designation', model: 'usr_designation', tag: 'input', type: 'text' },\n\t\t\t\t{ label: 'gender', model: 'usr_gender', tag: 'radio', value: [{ label: 'male', value: 'm' }, { label: 'female', value: 'f' }] },\n\t\t\t\t{ label: 'institution', model: 'usr_institution', tag: 'select', value: results.instits },\n\t\t\t\t{ label: 'education', model: 'usr_education', tag: 'select', value: results.educats },\n\t\t\t\t{ label: 'province', model: 'usr_province', tag: 'autocomplete', value: 'province' },\n\t\t\t\t{ label: 'regency', model: 'usr_regency', tag: 'autocomplete', value: 'regency' },\n\t\t\t\t{ label: 'district', model: 'usr_district', tag: 'autocomplete', value: 'district' },\n\t\t\t\t{ label: 'village', model: 'usr_village', tag: 'autocomplete', value: 'village' },\n\t\t\t];\n\t\t});\n\t}\n\n\tinit();\n}]);\n"]}