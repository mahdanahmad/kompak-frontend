{"version":3,"sources":["../../js/fetcher.js"],"names":["app","factory","$http","$httpParamSerializer","$window","$location","baseURL","config","headers","getAllUser","data","callback","get","then","success","error","getUser","id","postUser","post","putUser","put","deleteUser","delete","getAllQuestion","getQuestion","postQuestion","putQuestion","deleteQuestion","getAllEducation","getAllInstitution","getLocation","getAllCategory"],"mappings":"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","file":"fetcher.js","sourcesContent":["app.factory('fetcher', ['$http', '$httpParamSerializer', '$window', '$location', function($http, $httpParamSerializer, $window, $location) {\n\tlet baseURL\t= \"http://localhost:3010/\";\n\n\tlet config  = {\n\t\t// withCredentials: true,\n\t\theaders: { 'Content-Type': 'application/json; charset=utf-8' },\n\t};\n\n\treturn {\n\t\tgetAllUser: (data, callback) => { $http.get(baseURL + 'user' + '?' + $httpParamSerializer(data), config).then((success) => { callback(success.data); }, (error) => { callback(error.data); }); },\n\t\tgetUser: (id, callback) => { $http.get(baseURL + 'user/' + id, config).then((success) => { callback(success.data); }, (error) => { callback(error.data); }); },\n\t\tpostUser: (data, callback) => { $http.post(baseURL + 'user', data, config).then((success) => { callback(success.data); }, (error) => { callback(error.data); }); },\n\t\tputUser: (id, data, callback) => { $http.put(baseURL + 'user/' + id, data, config).then((success) => { callback(success.data); }, (error) => { callback(error.data); }); },\n\t\tdeleteUser: (id, callback) => { $http.delete(baseURL + 'user/' + id, config).then((success) => { callback(success.data); }, (error) => { callback(error.data); }); },\n\n\t\tgetAllQuestion: (data, callback) => { $http.get(baseURL + 'question' + '?' + $httpParamSerializer(data), config).then((success) => { callback(success.data); }, (error) => { callback(error.data); }); },\n\t\tgetQuestion: (id, callback) => { $http.get(baseURL + 'question/' + id, config).then((success) => { callback(success.data); }, (error) => { callback(error.data); }); },\n\t\tpostQuestion: (data, callback) => { $http.post(baseURL + 'question', data, config).then((success) => { callback(success.data); }, (error) => { callback(error.data); }); },\n\t\tputQuestion: (id, data, callback) => { $http.put(baseURL + 'question/' + id, data, config).then((success) => { callback(success.data); }, (error) => { callback(error.data); }); },\n\t\tdeleteQuestion: (id, callback) => { $http.delete(baseURL + 'question/' + id, config).then((success) => { callback(success.data); }, (error) => { callback(error.data); }); },\n\n\t\tgetAllEducation: (data, callback) => { $http.get(baseURL + 'education' + '?' + $httpParamSerializer(data), config).then((success) => { callback(success.data); }, (error) => { callback(error.data); }); },\n\n\t\tgetAllInstitution: (data, callback) => { $http.get(baseURL + 'institution' + '?' + $httpParamSerializer(data), config).then((success) => { callback(success.data); }, (error) => { callback(error.data); }); },\n\n\t\tgetLocation: (id, data, callback) => { $http.get(baseURL + 'location/' + id + '?' + $httpParamSerializer(data), config).then((success) => { callback(success.data); }, (error) => { callback(error.data); }); },\n\n\t\tgetAllCategory: (data, callback) => { $http.get(baseURL + 'category' + '?' + $httpParamSerializer(data), config).then((success) => { callback(success.data); }, (error) => { callback(error.data); }); },\n\t};\n}]);\n"]}